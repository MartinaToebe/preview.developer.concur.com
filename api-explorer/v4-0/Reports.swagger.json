{
    "openapi": "3.0.1",
    "info": {
        "title": "Expense Report Service",
        "description": "<b>Expense Report Service (ERS) is the next-generation v4 API for operations related to  creating and processing Expense Reports</b>. In order to interact with this API, a client  must include either an authorized User or Company JWT in the header of each request, or  use an X.509 client certificate with a CN included in the Allowed List by the ERS team.\n",
        "termsOfService": "https://developer.concur.com/Terms-of-Use.html",
        "license": {
            "name": "SAP Concur",
            "url": ""
        },
        "version": "4.15.5"
    },
    "externalDocs": {
        "description": "SAP Concur API Reference",
        "url": "https://developer.concur.com/api-reference/"
    },
    "servers": [
        {
            "url": "https://us2.api.concursolutions.com/expensereports/v4",
            "description": "US Production Environment Concur API EndPoint"
        },
        {
            "url": "https://eu2.api.concursolutions.com/expensereports/v4",
            "description": "EMEA Production Environment Concur API EndPoint"
        },
        {
            "url": "https://cn.api.cnqr-cn.com/expensereports/v4",
            "description": "China Production Environment Concur API EndPoint"
        },
        {
            "url": "https://usg.api.concursolutions.com/expensereports/v4",
            "description": "PSCC Production Environment Concur API EndPoint"
        }
    ],
    "tags": [
        {
            "name": "Comments",
            "description": "Gets the comments entered on the expense report header, or expenses of an existing expense report"
        },
        {
            "name": "Workflows",
            "description": "Manages workflow transitions for a report"
        },
        {
            "name": "Expenses",
            "description": "Gets the expenses and itemizations that belong to a specific expense report and updates an expense on an existing expense report"
        },
        {
            "name": "Reports",
            "description": "Gets and updates an expense report header of an existing expense report"
        },
        {
            "name": "Allocations",
            "description": "Gets the allocations that belong to a specific expense on an expense report and updates an allocation on an existing expense in an expense report"
        }
    ],
    "paths": {
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses/{expenseId}/comments": {
            "get": {
                "tags": [
                    "external",
                    "Comments"
                ],
                "summary": "Gets comments for the specified expense",
                "description": "Returns comments for the specified expense.",
                "operationId": "getReportEntryComments",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The unique identifier of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Specified context not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found,\nexpenseId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not authorized to access this report with this context type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comments successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentDetails"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/comments": {
            "get": {
                "tags": [
                    "external",
                    "Comments"
                ],
                "summary": "Gets comments for the specified report",
                "description": "Returns comments for the specified report.",
                "operationId": "getReportComments",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeAllComments",
                        "in": "query",
                        "description": "Return all the comments that are present on the report at all levels",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Specified context not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not authorized to access this report with this context type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comments successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentDetails"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses": {
            "get": {
                "tags": [
                    "external",
                    "Expenses"
                ],
                "summary": "Gets all expense summaries for the specified report",
                "description": "Returns all expense summaries for the specified report. Includes a link to expense details for each expense and a link to itemizations for each parent expense.",
                "operationId": "getReportExpensesSummary",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeItemizations",
                        "in": "query",
                        "description": "Include all itemizations of an Expense, if any",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false",
                            "enum": [
                                "false",
                                "true"
                            ]
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Specified context not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to access this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Expense summaries successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportEntrySummary"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses/{expenseId}/allocations": {
            "get": {
                "tags": [
                    "external",
                    "Allocations"
                ],
                "summary": "Gets all allocations for the specified expense",
                "description": "Returns all allocations for the specified expense.",
                "operationId": "getAllocations",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The unique identifier of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocations successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Allocation"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not authorized to access this report with this context type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid expenseId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}": {
            "get": {
                "tags": [
                    "external",
                    "Reports"
                ],
                "summary": "Gets report details for the specified report.",
                "description": "Returns report details for the specified report. Also returns a self link, plus each of the following links, contingent on the existence of the resource: comments, exceptions, expenses, formFields.",
                "operationId": "getReportDetails",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Specified context not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Report details successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportForm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not allowed to access this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reports"
                ],
                "summary": "Updates the report header",
                "description": "Updates the report header in an un-submitted expense report specified and is flexible for modifying multiple attributes in the schema",
                "operationId": "updateReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReport"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Specified context not supported,\nInvalid field value specified,\nUser does not have proper role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report successfully updated"
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/sendBack": {
            "patch": {
                "tags": [
                    "Workflows"
                ],
                "summary": "Sends back the specified report",
                "description": "Sends back the specified report, returning it to an unsubmitted state.",
                "operationId": "sendBackReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MANAGER"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendBackReport"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Report sent back successfully"
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to access this report \n\nCaller does not have permission to submit the report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Specified context not supported\n\nInvalid reportId\n\nerror.workflow.noComments: Cannot send report back without providing comments. Add a comment to explain why you are returning the report\n\nno_approver: You must identify an approver before the expense report moves on to the next workflow step\n\ninvalid_auth_approver: This report cannot be sent to the next approver. This workflow step must be approved by a specialized approver called an Authorized Approver. The selected approver is not an Authorized Approver. Select another approver\n\nno_approver.not_editable_step: There are no approvers defined in your workflow. Please contact your Expense administrator\n\nwf_config_invalid_next_step: You must identify an approver before the expense report moves on to the next workflow step\n\nnot_an_approver: This report cannot be sent to the next approver because the selected approver is no longer authorized to approve reports. Please select another approver\n\nerror.workflow.invalid_report_key: The expense report no longer exists in the system\n\nerror.workflow.missing_alloc_reqd_fields: At least one required allocation field in this report lacks data. Please provide the appropriate value, and then approve the report\n\nreports.workflow.invalidFGIStep: The action cannot be executed because expense report is not in valid FGI obligation step\n\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/recall": {
            "patch": {
                "tags": [
                    "Workflows"
                ],
                "summary": "Recalls the specified report to an unsubmitted state",
                "description": "Recalls the specified report to an unsubmitted state.",
                "operationId": "recallReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecallReport"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Specified context not supported\n\nInvalid reportId\n\nerror.workflow.no_clearingcode: Either the credit card account or the payment type is missing a clearing account code. Contact your Expense administrator\n\nerror.workflow.invalid_action: The action cannot be executed because it is not valid for the report workflow\n\nerror.workflow.invalid_report_key: The expense report no longer exists in the system\n\nerror.recall.cannotRecall: Expense report cannot be recalled\n\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report recalled successfully"
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to access this report \n\nCaller does not have permission to submit the report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses/{expenseId}": {
            "get": {
                "tags": [
                    "external",
                    "Expenses"
                ],
                "summary": "Gets expense details for the specified expense",
                "description": "Returns expense details for the specified expense. Also returns a self link, plus each of the following links, contingent on the existence of the resource: allocations, attendees, comments, exceptions, formFields, itemizations, tax.",
                "operationId": "getReportExpenseDetail",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The unique identifier of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Specified context not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to access this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found\n\nexpenseId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Expense details successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportEntryDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/approve": {
            "patch": {
                "tags": [
                    "Workflows"
                ],
                "summary": "Approves the specified report",
                "description": "Advances the specified report to approved status.",
                "operationId": "approveReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MANAGER"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveReport"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Report successfully approved"
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Specified context not supported\n\nerror.workflow.no_clearingcode: Either the credit card account or the payment type is missing a clearing account code. Contact your Expense administrator\n\nerror.workflow.invalid_action: The action cannot be executed because it is not valid for the report workflow\n\nerror.workflow.incomplete_receipt_review: You have not finished reviewing all the receipts in this report.  Your company requires that you review receipts during approval\n\ncannot_approve_your_own_report: This expense report was created by you. You cannot approve your own report\n\nno_approver: You must identify an approver before the expense report moves on to the next workflow step\n\ninvalid_auth_approver: This report cannot be sent to the next approver. This workflow step must be approved by a specialized approver called an Authorized Approver. The selected approver is not an Authorized Approver. Select another approver\n\nno_approver.not_editable_step: There are no approvers defined in your workflow. Please contact your Expense administrator\n\nno_approver.change_my_info: Missing the required approver for next workflow step. You may be able to select an approver; otherwise contact your Expense administrator for assistance\n\nwf_config_invalid_next_step: You must identify an approver before the expense report moves on to the next workflow step\n\nnot_an_approver: This report cannot be sent to the next approver because the selected approver is no longer authorized to approve reports. Please select another approver\n\napprover_cum_reportowner: You cannot send this report to this approver since this person created this report\n\napprover_cum_reportowner.is_editableby: Your workflow is configured such that the report would come back to the report owner during some step. Please contact your Employee Administrator to change the approvers\n\ninstance_out_of_date: The approval workflow that this expense report uses has changed. Please select a new approver in order to approve and process this expense report\n\nreview_approval_flow_approver: Review Approvers in the workflow\n\ncost_object_step: The next approval step is a Cost object step and cannot be approved through Mobile\n\nstep_exit_blocking_by_exception: One or more blocking exceptions are preventing approval submission. Resolve the exception before proceeding\n\nreceiptimagehold.workflow.noapprover: Missing the required approver for next step. Cannot advance report out of imaging hold. Contact your Expense administrator for assistance\n\nerror.workflow.invalid_report_key: The expense report no longer exists in the system\n\nattendee_total_error: This report contains at least one entry with invalid attendee amounts.  Please correct the attendee amounts before approving\n\napprover_cashadvance_owner.is_editableby: Your workflow is configured such that the cash advance would come back to the cash advance owner during some step. Please contact your Employee Administrator to change the approvers\n\nerror.workflow.missing_alloc_reqd_fields: At least one required allocation field in this report lacks data. Please provide the appropriate value, and then approve the report\n\nerror.recall.cannotRecall: Expense report cannot be recalled\n\nerror.workflow.noComments: Cannot send report back without providing comments. Add a comment to explain why you are returning the report\n\nstatusId.invalidValue: Invalid 'statusId' value specified\n\ninvalid.approverId.query: Unable to find approver for the specified user id in the query string parameter.\n\ninvalidAction.currentStep: Approve and Forward operation ('forwardToUserId' querystring parameter in the request) is not supported on this workflow step.\n\nerror.workflow.missingComments: Comments are required to approve this report.\n\nerror.workflow.rejectedExpenseMissingComments: Some of the expenses were rejected on this report and expenseRejectedComment is required to approve this report.\n\nerror.workflow.CostObjectChangeMissingComments: Changes were made on this report that impact Cost Objects and a comment is required to approve this report.\n\nerror.workflow.BudgetObjectChangeMissingComments: Changes were made on this report that impact Budget Objects and a comment is required to approve this report.\n\nreports.workflow.invalidFGIStep: The action cannot be executed because expense report is not in valid FGI obligation step\n\nreports.workflow.operationNotAllowed: Cannot approve a report when it's in processing payment or paid state\n\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to modify this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/allocations/{allocationId}": {
            "get": {
                "tags": [
                    "external",
                    "Allocations"
                ],
                "summary": "Gets specified allocation for the specified report.",
                "description": "Returns specified allocation for the specified report.",
                "operationId": "getAllocationById",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allocationId",
                        "in": "path",
                        "description": "The unique identifier of the expense allocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not authorized to access this report with this context type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid expenseId\n\nInvalid allocationId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found\n\nallocationId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Allocation successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportAllocationResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Updates the specified allocation for the report",
                "description": "Updates the specified allocation for the report.",
                "operationId": "updateAllocation_1",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report that contains the expense associated with the allocations",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allocationId",
                        "in": "path",
                        "description": "The unique identifier of the expense allocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReportAllocation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successfully updated the allocation"
                    },
                    "404": {
                        "description": "reportId not found\n\nallocationId not found\n\nexpenseId not found\n\nThe policy of the specified report does not have an allocation form defined. Contact your Concur Administrator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid field value specified\n\nInvalid expenseId\n\nInvalid allocationId\n\nUser does not have proper role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nSystem allocation cannot be modified\n\nUser is not authorized to access this report with this context type\n\nCaller does not have access permissions to perform the requested allocation operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/reports/{reportId}/sendBack": {
            "patch": {
                "tags": [
                    "external",
                    "Workflows"
                ],
                "summary": "Sends back the specified report",
                "description": "Sends back the specified report to report owner.",
                "operationId": "sendBackReportAsSystem",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendBackReportAsSystem"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "Caller cannot modify System workflow step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report successfully sent back"
                    },
                    "400": {
                        "description": "Specified context not supported\n\nInvalid reportId\n\nerror.workflow.noComments: Cannot send report back without providing comments. Add a comment to explain why you are returning the report\n\nno_approver: You must identify an approver before the expense report moves on to the next workflow step\n\ninvalid_auth_approver: This report cannot be sent to the next approver. This workflow step must be approved by a specialized approver called an Authorized Approver. The selected approver is not an Authorized Approver. Select another approver\n\nno_approver.not_editable_step: There are no approvers defined in your workflow. Please contact your Expense administrator\n\nwf_config_invalid_next_step: You must identify an approver before the expense report moves on to the next workflow step\n\nnot_an_approver: This report cannot be sent to the next approver because the selected approver is no longer authorized to approve reports. Please select another approver\n\nerror.workflow.invalid_report_key: The expense report no longer exists in the system\n\nerror.workflow.missing_alloc_reqd_fields: At least one required allocation field in this report lacks data. Please provide the appropriate value, and then approve the report\n\nreports.workflow.invalidFGIStep: The action cannot be executed because expense report is not in valid FGI obligation step\n\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/reports/{reportId}/expenses/{expenseId}": {
            "patch": {
                "tags": [
                    "external",
                    "Expenses"
                ],
                "summary": "Updates (limited fields) the specified expense in an un-submitted or submitted report",
                "description": "Updates the specified expense in an un-submitted or submitted report and is restricted to modify 'Business Purpose', 'Custom/Org unit' and 'Expense Rejected' fields only",
                "operationId": "updateReportExpenseUsingShortURL",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The unique identifier of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReportExpenseCompact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid field value specified\n\nCannot perform the operation as the report is already paid\n\nCannot replace receipt affidavit with receipt image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Your request cannot be processed as the specified resource is locked for another process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not allowed to modify the reopened report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found\n\nexpenseId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully updated the report expense"
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/reports/{reportId}/approve": {
            "patch": {
                "tags": [
                    "external",
                    "Workflows"
                ],
                "summary": "Approves the specified report to the next step if it is in a system step",
                "description": "Advances the specified report to the next step if it is in a system step.",
                "operationId": "approveReportAsSystem",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveReportAsSystem"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Report successfully approved"
                    },
                    "403": {
                        "description": "Caller cannot modify System workflow step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Specified context not supported\n\nerror.submit.Generic: An error occurred while submitting the selected report. The report was not submitted\n\nerror.submit.no_entries: The expense report has no expenses. You must create at least one expense in order to submit the report\n\nerror.workflow.no_clearingcode: Either the credit card account or the payment type is missing a clearing account code. Contact your Expense administrator\n\nerror.workflow.invalid_action: The action cannot be executed because it is not valid for the report workflow\n\nerror.workflow.incomplete_receipt_review: You have not finished reviewing all the receipts in this report.  Your company requires that you review receipts during approval\n\nerror.submit.rptXctMaxThreshold: This expense report cannot be submitted until all blocking exceptions are resolved\n\nerror.submit.entryXctMaxThreshold: This expense report cannot be submitted until all blocking exceptions are resolved\n\nerror.submit.undefined_expense_type: The expense report contains one or more expenses with an expense type of Undefined. You must select an expense type for each expense before you can submit the report\n\nerror.submit.missing_reqd_fields: At least one required field in this report is empty. Please provide a value and then submit the report\n\nerror.submit.missing_alloc_reqd_fields: At least one required allocation field in this report is empty. Please provide the appropriate value, and then submit the report\n\nerror.submit.missingKids: This report contains a Lodging expense that is not itemized. Lodging expenses must be itemized in the report before it can be submitted\n\nerror.submit.itemDiff: The expense report contains at least one itemized expense. The itemization amounts do not add up to the expense amount. Edit the itemized entries to make the required changes before submitting the report\n\nerror.submit.itemMissing: This report cannot be submitted because one or more entries must be itemized. Itemize the entries and then submit the report\n\nerror.submit.alreadySubmitted: The report has already been submitted and cannot be submitted again\n\nerror.submit.cannotSubmitAsDelegate: The report cannot be submitted by the Delegate\n\nerror.submit.cashadvance_cant_carry_balance: Cash Advances must be entirely utilized or returned. Please enter a Cash Advance Return on this report to return the remaining balance\n\nerror.submit.cashadvance_negative_balance: The Cash Advance Balance is negative because a Cash Advance Return is greater than the remaining balance. Either enter a Currency Gain/Loss expense to bring the balance to zero or adjust the Cash Advance Return amount to bring the balance to zero. Then, click Submit again\n\nerror.submit.single_row_itinerary: This report contains at least one itinerary with a single itinerary row. An itinerary is not valid until it has at least two rows. Please add another row to complete the itinerary\n\nerror.submit.invalidAttendeeType: This report contains at least one entry with an attendee of an invalid type.  Please remove the attendee(s) before submitting the report\n\ninfo.submit.notify_by_delegate: A notification has been sent to the employee\n\ncannot_approve_your_own_report: This expense report was created by you. You cannot approve your own report\n\nno_approver: You must identify an approver before the expense report moves on to the next workflow step\n\ninvalid_auth_approver: This report cannot be sent to the next approver. This workflow step must be approved by a specialized approver called an Authorized Approver. The selected approver is not an Authorized Approver. Select another approver\n\nno_approver.not_editable_step: There are no approvers defined in your workflow. Please contact your Expense administrator\n\nno_approver.change_my_info: Missing the required approver for next workflow step. You may be able to select an approver; otherwise contact your Expense administrator for assistance\n\nwf_config_invalid_next_step: You must identify an approver before the expense report moves on to the next workflow step\n\nnot_an_approver: This report cannot be sent to the next approver because the selected approver is no longer authorized to approve reports. Please select another approver\n\napprover_cum_reportowner: You cannot send this report to this approver since this person created this report\n\napprover_cum_reportowner.is_editableby: Your workflow is configured such that the report would come back to the report owner during some step. Please contact your Employee Administrator to change the approvers\n\ninstance_out_of_date: The approval workflow that this expense report uses has changed. Please select a new approver in order to approve and process this expense report\n\nreview_approval_flow_approver: Review Approvers in the workflow\n\ncost_object_step: The next approval step is a Cost object step and cannot be approved through Mobile\n\nstep_exit_blocking_by_exception: One or more blocking exceptions are preventing approval submission. Resolve the exception before proceeding\n\nreceiptimagehold.workflow.noapprover: Missing the required approver for next step. Cannot advance report out of imaging hold. Contact your Expense administrator for assistance\n\nerror.workflow.invalid_report_key: The expense report no longer exists in the system\n\nattendee_total_error: This report contains at least one entry with invalid attendee amounts.  Please correct the attendee amounts before approving\n\napprover_cashadvance_owner.is_editableby: Your workflow is configured such that the cash advance would come back to the cash advance owner during some step. Please contact your Employee Administrator to change the approvers\n\nerror.workflow.missing_alloc_reqd_fields: At least one required allocation field in this report lacks data. Please provide the appropriate value, and then approve the report\n\nerror.recall.cannotRecall: Expense report cannot be recalled\n\nerror.workflow.noComments: Cannot send report back without providing comments. Add a comment to explain why you are returning the report\n\nstatusId.invalidValue: Invalid 'statusId' value specified\n\ninvalid.approverId.query: Unable to find approver for the specified user id in the query string parameter.\n\ninvalidAction.currentStep: Approve and Forward operation ('forwardToUserId' querystring parameter in the request) is not supported on this workflow step.\n\nerror.workflow.missingComments: Comments are required to approve this report.\n\nerror.workflow.rejectedExpenseMissingComments: Some of the expenses were rejected on this report and expenseRejectedComment is required to approve this report.\n\nerror.workflow.CostObjectChangeMissingComments: Changes were made on this report that impact Cost Objects and a comment is required to approve this report.\n\nerror.workflow.BudgetObjectChangeMissingComments: Changes were made on this report that impact Budget Objects and a comment is required to approve this report.\n\nreports.workflow.invalidFGIStep: The action cannot be executed because expense report is not in valid FGI obligation step\n\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/reports/{reportId}/costObjectsForApprover": {
            "get": {
                "tags": [
                    "Workflows"
                ],
                "summary": "Gets the cost object details for the specified report.",
                "description": "Returns the cost object details for the specified report.",
                "operationId": "getCostObjectsForApprover",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cost object details successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CostObjectForApprover"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not allowed to access this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reportsToApprove": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Gets the reports to approve for the specified approver",
                "description": "Returns the reports to approve for the specified approver.",
                "operationId": "getReportsToApprove",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The name of the column on which to sort",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "reportDate",
                            "enum": [
                                "amountDueEmployee",
                                "claimedAmount",
                                "employeeFirstName",
                                "employeeLastName",
                                "name",
                                "reportDate",
                                "submitDate"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "includeDelegateApprovals",
                        "in": "query",
                        "description": "If true, reports pending approvals of employees you delegate for are returned as well.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser does not have proper role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Specified context not supported,\nInvalid date filter provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Reports to approve successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportToApprove"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses/{expenseId}/itemizations": {
            "get": {
                "tags": [
                    "external",
                    "Expenses"
                ],
                "summary": "Gets a list of itemization summaries for the specified expense",
                "description": "Returns a list of itemization summaries for the specified expense. Also returns a self link",
                "operationId": "getReportExpenseItemizationsSummary",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The unique identifier of the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The unique identifier of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The unique identifier of the Concur user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contextType",
                        "in": "path",
                        "description": "The access level of the Concur user, which determines the form fields they can view/modify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TRAVELER",
                                "PROXY"
                            ]
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Itemization summaries successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportEntryItemizationSummary"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not allowed to access this report ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reportId not found\n\nexpenseId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or invalid authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Specified context not supported\n\nInvalid reportId\n\nInvalid expenseId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Retry your request again",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorMessage": {
                "required": [
                    "errorMessage",
                    "httpStatus",
                    "path",
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "description": "The time when the error was captured",
                        "format": "date-time"
                    },
                    "httpStatus": {
                        "type": "string",
                        "description": "The http response code and phrase for the response"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "The detailed error message"
                    },
                    "errorId": {
                        "type": "string",
                        "description": "The unique identifier of the error associated with the response or is it error response itself"
                    },
                    "validationErrors": {
                        "type": "array",
                        "description": "The validation error messages",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    },
                    "customResponseData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The custom parameters related to error"
                        },
                        "description": "The custom parameters related to error"
                    },
                    "path": {
                        "type": "string",
                        "description": "The URI of the attempted request"
                    }
                }
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string",
                        "description": "The type of validation which failed"
                    },
                    "message": {
                        "type": "string",
                        "description": "The detailed message of the validation error"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the validation error"
                    }
                },
                "description": "The validation error messages"
            },
            "CustomData": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the custom field e.g. 'custom1', 'orgUnit1'"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the custom field. This field can have values for all the supported data types such as 'text', 'integer', 'boolean' and 'listItemId'. Maximum length: 48 characters"
                    },
                    "isValid": {
                        "type": "boolean",
                        "description": "Whether the value returned is valid or not. This value is returned for custom fields of all data types and is specifically evaluated for list items to represent the current status. Default value: true",
                        "readOnly": true
                    },
                    "listItemUrl": {
                        "type": "string",
                        "description": "href (string): The URL of the related HATEOAS link that you can use for subsequent calls",
                        "readOnly": true
                    }
                },
                "description": "The unique id of Fuel Type"
            },
            "AirTrip": {
                "type": "object",
                "properties": {
                    "airlineName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the airline vendor.",
                        "example": "Alaska Airlines"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The first travel date or the travel start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The last travel date or the travel end date(ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "numberOfTravelDays": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of days of travel.",
                        "format": "int32"
                    },
                    "ticketType": {
                        "maxLength": 10,
                        "type": "string",
                        "description": "The airline class of service.",
                        "example": "Economy"
                    },
                    "totalAmountPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "comparisonFare": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "reasonCodes": {
                        "type": "array",
                        "description": "The Reason Code defines the reason for booked fare against the comparison fare.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Air trip data associated with the expense. Please refer to the 'AirTrip' object for more information"
            },
            "Amount": {
                "required": [
                    "currencyCode",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The amount in the defined currency"
                    },
                    "currencyCode": {
                        "type": "string",
                        "description": "The 3-letter ISO 4217 currency code for the expense report currency, based on the user's assigned reimbursement currency when the report was created. Examples: USD - US dollars; BRL - Brazilian real; CAD - Canadian dollar; CHF - Swiss franc; EUR - Euro; GBO - Pound sterling; HKD - Hong Kong dollar; INR - Indian rupee; MXN - Mexican peso; NOK - Norwegian krone; SEK - Swedish krona"
                    }
                },
                "description": "The amount comprises of value and currency."
            },
            "CarEReceipt": {
                "type": "object",
                "properties": {
                    "calculatedDailyRate": {
                        "type": "number",
                        "description": "The calculated car rental daily rate"
                    },
                    "carClass": {
                        "maxLength": 4,
                        "type": "string",
                        "description": "The car class.",
                        "example": "'IDAD', 'ECMZ', 'PCAV', 'IGDV'"
                    },
                    "currencyCode": {
                        "type": "string",
                        "description": "The 3-letter ISO 4217 currency code.",
                        "example": "'USD - US dollars', 'BRL - Brazilian real', 'CAD - Canadian dollar'"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The car rental end date(ISO-8601)(https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "fuelServiceCharge": {
                        "minimum": 0,
                        "type": "number",
                        "description": "The fuel service charge."
                    },
                    "numberOfRentalDays": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The number of car rental calculated days.",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The car rental start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "unitsDriven": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The total units driven.",
                        "format": "int32"
                    },
                    "vendorName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the car vendor.",
                        "example": "ABC Rent A Car"
                    }
                },
                "description": "The eReceipt car data. Please refer to the 'CarEReceipt' object for more information"
            },
            "CarTrip": {
                "type": "object",
                "properties": {
                    "calculatedDailyRate": {
                        "type": "number",
                        "description": "The calculated car rental daily rate"
                    },
                    "carClass": {
                        "maxLength": 10,
                        "type": "string",
                        "description": "The car class.",
                        "example": "'IDAD', 'ECMZ', 'PCAV', 'IGDV'"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The car rental end date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "numberOfCars": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of cars rented.",
                        "format": "int32"
                    },
                    "numberOfRentalDays": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The number of car rental calculated days.",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The car rental start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "totalAmountPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "vendorName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the car vendor.",
                        "example": "'ABC Rent A Car'"
                    }
                },
                "description": "Car trip data associated with the expense. Please refer to the 'CarTrip' object for more information"
            },
            "EReceipt": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "carEReceipt": {
                        "$ref": "#/components/schemas/CarEReceipt"
                    },
                    "hotelEReceipt": {
                        "$ref": "#/components/schemas/HotelEReceipt"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the eReceipt with the expense"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "The unique identifier of the eReceipt image associated with the expense"
                    },
                    "templateURL": {
                        "maxLength": 512,
                        "type": "string",
                        "description": "The URL of the eReceipt template."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of eReceipt associated with the expense.",
                        "enum": [
                            "'AIR",
                            "CAR",
                            "GASXX",
                            "GENERAL",
                            "GRTRN",
                            "HOTEL",
                            "JPT",
                            "MEALS",
                            "OFFIC",
                            "PRKNG",
                            "RAIL",
                            "RIDE",
                            "SHIPG",
                            "TELEC",
                            "CFDI"
                        ]
                    }
                },
                "description": "EReceipt information for the expense. Please refer to the 'EReceipt' object for more information"
            },
            "ExchangeRate": {
                "required": [
                    "operation",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Exchange rate value"
                    },
                    "operation": {
                        "type": "string",
                        "description": "Exchange rate operation.",
                        "enum": [
                            "MULTIPLY",
                            "DIVIDE"
                        ]
                    }
                },
                "description": "Exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information"
            },
            "ExpenseAttendee": {
                "required": [
                    "attendeeId"
                ],
                "type": "object",
                "properties": {
                    "attendeeId": {
                        "type": "string",
                        "description": "The unique identifier of the associated expense attendee within Concur"
                    },
                    "customData": {
                        "type": "array",
                        "description": "The set of data the custom fields contain for the attendee based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "isAmountUserEdited": {
                        "type": "boolean",
                        "description": "This field indicates if the amount value for the attendee on this expense was ever manually edited by the end user. Default value: false"
                    },
                    "isTraveling": {
                        "type": "boolean",
                        "description": "Whether the attendee was traveling when the expense was incurred, used for FBT tax calculations"
                    },
                    "associatedAttendeeCount": {
                        "type": "integer",
                        "description": "The count of total attendees. A count greater than 1 means there are unnamed attendees associated with this expense-attendee record. Default value: 1",
                        "format": "int32"
                    },
                    "versionNumber": {
                        "type": "integer",
                        "description": "The version number of the attendee. This field value may always be 1, depending on the configuration. Default value: 1",
                        "format": "int32"
                    },
                    "transactionAmount": {
                        "type": "number",
                        "description": "The portion of the expense transaction amount assigned to this attendee for both individual expense tracking and attendee totals across time periods"
                    }
                }
            },
            "ExpenseAttendees": {
                "type": "object",
                "properties": {
                    "noShowAttendeeCount": {
                        "type": "integer",
                        "description": "The number of attendees that were planned but did not show up",
                        "format": "int32",
                        "default": 0
                    },
                    "expenseAttendeeList": {
                        "maxItems": 500,
                        "type": "array",
                        "description": "The list of attendees associated with the expense.",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseAttendee"
                        }
                    }
                },
                "description": "The attendee details associated with the smart expense. Please refer to the 'ExpenseAttendees' object for more information"
            },
            "ExpenseTax": {
                "required": [
                    "taxAuthorityId"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "reclaimCode": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "The tax reclaim code."
                    },
                    "reclaimTransactionAmount": {
                        "type": "number",
                        "description": "The tax reclaim transaction amount"
                    },
                    "taxAuthorityId": {
                        "type": "string",
                        "description": "The unique identifier of the tax authority"
                    },
                    "taxAuthorityName": {
                        "type": "string",
                        "description": "The name of the tax authority"
                    },
                    "taxCode": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "The tax code."
                    },
                    "taxLabel": {
                        "type": "string",
                        "description": "The localized label of the tax authority"
                    },
                    "taxFormId": {
                        "type": "string",
                        "description": "The unique identifier of the tax form associated with the expense"
                    },
                    "taxRateTypeId": {
                        "type": "string",
                        "description": "The unique identifier of the tax rate type id"
                    },
                    "taxRateTypeName": {
                        "type": "string",
                        "description": "The name of the tax rate type"
                    },
                    "taxReclaimConfigurationId": {
                        "type": "string",
                        "description": "The unique identifier of the tax reclaim configuration id"
                    },
                    "taxTransactionAmount": {
                        "type": "number",
                        "description": "The tax transaction amount"
                    }
                },
                "description": "The tax data for the expense. Please refer to the 'ExpenseTax' object for more information"
            },
            "ExpenseType": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 5,
                        "type": "string",
                        "description": "The unique identifier of the expense type. Maximum length: 5 characters. Example: 'BRKFT'"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the expense type (localized as per accept-language header)"
                    },
                    "code": {
                        "type": "string",
                        "description": "The code of the expense type"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Whether the expense type returned is deleted or not"
                    },
                    "listItemId": {
                        "type": "string",
                        "description": "The unique identifier of the list item for this expense type"
                    }
                },
                "description": "The expense type information for the expense. Please refer to the 'ExpenseType' object for more information"
            },
            "HotelEReceipt": {
                "type": "object",
                "properties": {
                    "calculatedDailyRate": {
                        "type": "number",
                        "description": "The calculated hotel daily rate"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The hotel checkout date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The unique identifier of the location for this hotel"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The hotel checkin date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "totalAmountPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "vendorName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the hotel vendor.",
                        "example": "'Hilton', 'Four Points by Sheraton, Seattle'"
                    }
                },
                "description": "The eReceipt hotel data. Please refer to the 'HotelEReceipt' object for more information"
            },
            "HotelTrip": {
                "type": "object",
                "properties": {
                    "calculatedDailyRate": {
                        "type": "number",
                        "description": "The calculated hotel daily rate"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The hotel checkout date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "numberOfNights": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of nights.",
                        "format": "int32"
                    },
                    "numberOfRooms": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of hotel rooms.",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The hotel checkin date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "totalAmountPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "vendorName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the hotel vendor.",
                        "example": "'Hilton', 'Four Points by Sheraton, Seattle'"
                    }
                },
                "description": "Hotel trip data associated with the expense. Please refer to the 'HotelTrip' object for more information"
            },
            "Location": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the location. When location id is specified (when creating or updating a resource), other location object fields will be ignored"
                    },
                    "name": {
                        "type": "string",
                        "description": "The location name (localized as per accept-language header)"
                    },
                    "city": {
                        "type": "string",
                        "description": "The location city"
                    },
                    "countrySubDivisionCode": {
                        "type": "string",
                        "description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
                    }
                },
                "description": "The location information of the expense. Please refer to the 'Location' object for more information"
            },
            "Mileage": {
                "required": [
                    "totalDistance",
                    "vehicleId"
                ],
                "type": "object",
                "properties": {
                    "odometerStart": {
                        "type": "integer",
                        "description": "The odometer reading at the start of the journey",
                        "format": "int32"
                    },
                    "odometerEnd": {
                        "type": "integer",
                        "description": "The odometer reading at the end of the journey",
                        "format": "int32"
                    },
                    "passengerCount": {
                        "type": "integer",
                        "description": "The number of passengers in the vehicle during the journey",
                        "format": "int32"
                    },
                    "personalDistance": {
                        "type": "integer",
                        "description": "The portion of the journey attributed to personal use.",
                        "format": "int32",
                        "default": 0
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The unique identifier of the route for this journey"
                    },
                    "totalDistance": {
                        "type": "integer",
                        "description": "The total distance for this journey",
                        "format": "int32"
                    },
                    "vehicleId": {
                        "type": "string",
                        "description": "The unique identifier for the vehicle used for this journey"
                    },
                    "hasMobileCanteenOrHeavyLoadAttached": {
                        "type": "boolean",
                        "description": "Whether the mileage expense has mobile canteen or is transporting a heavy load attached to the car.",
                        "default": false
                    },
                    "hasCaravanAttached": {
                        "type": "boolean",
                        "description": "Whether the mileage expense has caravan attached to the car",
                        "default": false
                    },
                    "hasDogIncluded": {
                        "type": "boolean",
                        "description": "Whether the mileage expense includes a dog for work purposes.",
                        "default": false
                    },
                    "hasForestOrConstructionSiteRoadInRoute": {
                        "type": "boolean",
                        "description": "Whether the mileage route is via a forest road or construction site road.",
                        "default": false
                    },
                    "hasForestRoadInRoute": {
                        "type": "boolean",
                        "description": "Whether the mileage route has forest road.",
                        "default": false
                    },
                    "isMarkedAsHigherRate": {
                        "type": "boolean",
                        "description": "Whether a higher rate should be applied to the mileage expense.",
                        "default": false
                    },
                    "hasMachinery": {
                        "type": "boolean",
                        "description": "Whether machines or equipment are transported in the car for this mileage expenses.",
                        "default": false
                    },
                    "hasTrailerAttached": {
                        "type": "boolean",
                        "description": "Whether the mileage expense has trailer attached to the car.",
                        "default": false
                    }
                },
                "description": "The mileage data associated with the expense. Please refer to the 'Mileage' object for more information"
            },
            "PaymentType": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the Payment type. Maximum length: 4 characters. Example: 'CASH'"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the payment type (localized as per accept-language header)"
                    },
                    "code": {
                        "type": "string",
                        "description": "The code of the payment type"
                    }
                },
                "description": "The payment type information for the expense. Please refer to the 'PaymentType' object for more information"
            },
            "ReceiptType": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the receipt type.",
                        "default": "N",
                        "enum": [
                            "N - No Receipt",
                            "R - Regular Receipt",
                            "T - Tax Receipt"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "Receipt status (localized as per accept-language header)"
                    }
                },
                "description": "Receipt type for the expense. Please refer to the 'ReceiptType' object for more information"
            },
            "RideTrip": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "The start date for the ride (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD .",
                        "format": "date"
                    },
                    "totalAmountPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "vendorName": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "The name of the vendor.",
                        "example": "Yellow Cab"
                    }
                },
                "description": "Ride or Taxi trip data associated with the expense. Please refer to the 'RideTrip' object for more information"
            },
            "SmartExpense": {
                "type": "object",
                "properties": {
                    "creditCardTransactionId": {
                        "type": "string",
                        "description": "The unique identifier of the credit card transaction (indexed transactionId) associated with the expense"
                    },
                    "ereceipt": {
                        "$ref": "#/components/schemas/EReceipt"
                    },
                    "isAutoCreated": {
                        "type": "boolean",
                        "description": "Whether this expense is auto created. This element only applies to POST expense request.",
                        "default": false
                    },
                    "quickExpenseId": {
                        "type": "string",
                        "description": "The unique identifier of the mobile expense associated with the expense. When 'quickExpenseId' is specified, 'exchangeRate.value' field value will be ignored and it's value will be read from exchange rate currency service but 'exchangeRate.operation' will still be honored"
                    },
                    "personalCardTransactionId": {
                        "type": "string",
                        "description": "The unique identifier of the personal card transaction associated with the expense"
                    },
                    "expenseAttendees": {
                        "$ref": "#/components/schemas/ExpenseAttendees"
                    },
                    "trip": {
                        "$ref": "#/components/schemas/Trip"
                    }
                },
                "description": "The smart expense data associated with this expense. Please refer to the 'SmartExpense' object for more information"
            },
            "Tax": {
                "required": [
                    "expenseTax1"
                ],
                "type": "object",
                "properties": {
                    "expenseTax1": {
                        "$ref": "#/components/schemas/ExpenseTax"
                    },
                    "expenseTax2": {
                        "$ref": "#/components/schemas/ExpenseTax"
                    }
                },
                "description": "The tax data associated with the expense"
            },
            "Travel": {
                "type": "object",
                "properties": {
                    "airlineFeeTypeCode": {
                        "type": "string",
                        "description": "Airline fee type code.",
                        "enum": [
                            "BAGGS",
                            "BUSIN",
                            "OBENT",
                            "ONBRD",
                            "OTHER",
                            "PRACC",
                            "SEATS",
                            "TKCHG",
                            "UPGRD"
                        ]
                    },
                    "airlineFeeTypeName": {
                        "type": "string",
                        "description": "The localized airline fee type name"
                    },
                    "airlineServiceClassCode": {
                        "type": "string",
                        "description": "The airline service class code.",
                        "enum": [
                            "BUSIN",
                            "COACH",
                            "FIRST"
                        ]
                    },
                    "airlineServiceClassName": {
                        "type": "string",
                        "description": "The localized airline service class name"
                    },
                    "carRentalDays": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The number of days car was rented.",
                        "format": "int32"
                    },
                    "endLocation": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Location where the travel ended."
                    },
                    "hotelCheckinDate": {
                        "type": "string",
                        "description": "The hotel checkin date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "hotelCheckoutDate": {
                        "type": "string",
                        "description": "The hotel checkout date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "startLocation": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Location where the travel started."
                    },
                    "ticketNumber": {
                        "maxLength": 32,
                        "type": "string",
                        "description": "The ticket number associated with the travel."
                    }
                },
                "description": "The travel data associated with the expense. Please refer to the 'Travel' object for more information"
            },
            "TravelAllowance": {
                "type": "object",
                "properties": {
                    "dailyLimitAmount": {
                        "type": "number",
                        "description": "The allowed amount based on government travel allowance rates"
                    },
                    "dailyTravelAllowanceId": {
                        "maxLength": 32,
                        "type": "string",
                        "description": "The fixed daily travel allowance id associated with the expense. "
                    },
                    "isExpensePartOfTravelAllowance": {
                        "type": "boolean",
                        "description": "Whether the expense is part of travel allowance.",
                        "default": false
                    }
                },
                "description": "The travel allowance data associated with the expense. Please refer to the 'TravelAllowance' object for more information"
            },
            "Trip": {
                "required": [
                    "segmentId",
                    "segmentTypeId",
                    "tripId"
                ],
                "type": "object",
                "properties": {
                    "airTrip": {
                        "$ref": "#/components/schemas/AirTrip"
                    },
                    "bookingOrigin": {
                        "type": "string",
                        "description": "Booking origin of the trip.",
                        "enum": [
                            "AETM - Amadeus E-Travel",
                            "CLIQ - Concur Travel",
                            "PANM - Open Booking",
                            "TRPT - TripIt",
                            "TSUP - Travel Supplier"
                        ]
                    },
                    "bookingSource": {
                        "maxLength": 48,
                        "type": "string",
                        "description": "Booking source of the trip. ",
                        "example": "'Expedia', 'Travelocity', 'Manual'"
                    },
                    "carTrip": {
                        "$ref": "#/components/schemas/CarTrip"
                    },
                    "cliqbookPaymentId": {
                        "type": "integer",
                        "description": "Cliqbook payment id associated with the trip",
                        "format": "int32"
                    },
                    "cliqbookPaymentMethod": {
                        "type": "string",
                        "description": "Cliqbook payment method associated with the trip.",
                        "enum": [
                            "GHOST_CARD",
                            "FLGHT_PASS"
                        ]
                    },
                    "hotelTrip": {
                        "$ref": "#/components/schemas/HotelTrip"
                    },
                    "merchantCode": {
                        "maxLength": 4,
                        "type": "string",
                        "description": "Merchant code associated with the trip."
                    },
                    "rideTrip": {
                        "$ref": "#/components/schemas/RideTrip"
                    },
                    "segmentId": {
                        "type": "integer",
                        "description": "The unique identifier of the segment associated with the expense",
                        "format": "int64"
                    },
                    "segmentTypeId": {
                        "type": "string",
                        "description": "Segment type id associated with the trip.",
                        "enum": [
                            "AIRFR - Air Ticket",
                            "AIRSU - Air Subscription",
                            "CARRT - Car Rental",
                            "DININ - Dining",
                            "EVENT - Event",
                            "HOTEL - Hotel Reservation",
                            "INSUR - Insurance",
                            "LIMOF - Limousine Reservation",
                            "MISC - Miscellaneous",
                            "PARKG - Parking Fee",
                            "RAILF - Train Ticket",
                            "RAISU - Train Subscription",
                            "TAXIF - Taxi Fare",
                            "VISA - Visa"
                        ]
                    },
                    "startLocationId": {
                        "type": "string",
                        "description": "The unique identifier of the start location associated with the trip"
                    },
                    "tripId": {
                        "type": "integer",
                        "description": "The unique identifier of the trip id associated with the expense",
                        "format": "int64"
                    }
                },
                "description": "Trip data associated with the expense. Please refer to the 'Trip' object for more information"
            },
            "Vendor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the vendor"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the vendor (localized as per accept-language header)"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the vendor. Maximum length: 64 characters"
                    }
                },
                "description": "The vendor information for the expense. Please refer to the 'Vendor' object for more information"
            },
            "RedirectFund": {
                "required": [
                    "amount",
                    "creditCardId"
                ],
                "type": "object",
                "properties": {
                    "creditCardId": {
                        "type": "string",
                        "description": "The unique identifier of the IBCP card account to which funds need to be redirected"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Amount"
                    }
                },
                "description": "Payment redirected to card at user's request"
            },
            "UpdateReport": {
                "required": [
                    "reportSource"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "businessPurpose": {
                        "type": "string",
                        "description": "The text input for the business purpose by the user"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The expense report comment added by the user"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country name associated with the report (localized as per accept-language header)",
                        "readOnly": true
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
                    },
                    "countrySubDivisionCode": {
                        "type": "string",
                        "description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "isCopyDownInherited": {
                        "type": "boolean",
                        "description": "If this flag is set to true, any change in the report header fields will be copied down to expenses, itemizations and allocations, as per the configuration. Usage of this flag should be deliberate as data corruption could result."
                    },
                    "name": {
                        "type": "string",
                        "description": "The expense report name input by the user"
                    },
                    "policy": {
                        "type": "string",
                        "description": "The policy name to which the report adheres to",
                        "readOnly": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The unique identifier of the policy that applies to this report"
                    },
                    "redirectFund": {
                        "$ref": "#/components/schemas/RedirectFund"
                    },
                    "reportDate": {
                        "type": "string",
                        "description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "Other",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "sponsorId": {
                        "type": "string",
                        "description": "The unique identifier of the Employee, who is the official sponsor of the report owner"
                    },
                    "hasReceivedCashAdvanceReturns": {
                        "type": "boolean",
                        "description": "Whether the Processor has received funds from the user for a cash advance return"
                    },
                    "isPaperReceiptsReceived": {
                        "type": "boolean",
                        "description": "Whether paper receipts have been received for the report"
                    },
                    "receiptContainerId": {
                        "type": "string",
                        "description": "The unique identifier of the physical location where the paper receipts are stored"
                    }
                },
                "description": "Report body"
            },
            "SendBackReport": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "OTHER",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    },
                    "comment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This is the approver's remark on the sendback action"
                    }
                },
                "description": "Report body"
            },
            "RecallReport": {
                "type": "object",
                "properties": {
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "OTHER",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    }
                }
            },
            "UpdateReportExpense": {
                "required": [
                    "expenseSource"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "authorizationRequestExpenseId": {
                        "type": "string",
                        "description": "The authorization request expense id associated with the expense"
                    },
                    "businessPurpose": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The text input for the business purpose by the user."
                    },
                    "comment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "A comment that describes the expense."
                    },
                    "exchangeRate": {
                        "$ref": "#/components/schemas/ExchangeRate"
                    },
                    "expenseSource": {
                        "type": "string",
                        "description": "The source of the expense. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TA - Travel Allowance, TR - Travel Request, UI - Web UI",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TA",
                            "TR",
                            "UI"
                        ]
                    },
                    "expenseType": {
                        "$ref": "#/components/schemas/ExpenseType"
                    },
                    "isExpenseBillable": {
                        "type": "boolean",
                        "description": "Whether the expense is billable"
                    },
                    "isPersonalExpense": {
                        "type": "boolean",
                        "description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
                    },
                    "isExcludedFromCashAdvanceByUser": {
                        "type": "boolean",
                        "description": "Whether the user has excluded the expense from cash advance"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "merchantTaxId": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The merchant tax id for the expense."
                    },
                    "mileage": {
                        "$ref": "#/components/schemas/Mileage"
                    },
                    "paymentType": {
                        "$ref": "#/components/schemas/PaymentType"
                    },
                    "receiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image associated with the expense"
                    },
                    "receiptType": {
                        "$ref": "#/components/schemas/ReceiptType"
                    },
                    "smartExpense": {
                        "$ref": "#/components/schemas/SmartExpense"
                    },
                    "tax": {
                        "$ref": "#/components/schemas/Tax"
                    },
                    "taxRateLocation": {
                        "type": "string",
                        "description": "Transaction location relative to the employee's home location as defined by their user profile. Possible values: FOREIGN - The expense transaction took place in foreign currency, HOME - The expense transaction took place in the reimbursement currency, OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction",
                        "enum": [
                            "FOREIGN",
                            "HOME",
                            "OUT_OF_PROVINCE"
                        ]
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "travelAllowance": {
                        "$ref": "#/components/schemas/TravelAllowance"
                    },
                    "travel": {
                        "$ref": "#/components/schemas/Travel"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/Vendor"
                    },
                    "jptRouteId": {
                        "type": "string",
                        "description": "The unique route ID to identify a Japan rail route"
                    },
                    "fuelTypeListItem": {
                        "$ref": "#/components/schemas/CustomData"
                    },
                    "budgetAccrualDate": {
                        "type": "string",
                        "description": "The budget accrual date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601)Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "approverAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "hasMissingReceiptDeclaration": {
                        "type": "boolean",
                        "description": "Whether the expense has an affidavit declaration for missing receipt"
                    },
                    "isCopyDownInherited": {
                        "type": "boolean",
                        "description": "If this flag is set to true, any change in the report expense fields will be copied down to itemization's and allocations, as per the configuration"
                    },
                    "isExpenseRejected": {
                        "type": "boolean",
                        "description": "Whether the approver or processor has rejected this expense in the report. If this is true then this expense will be sent back to the report submitted in an addendum (split) report"
                    },
                    "isPaperReceiptReceived": {
                        "type": "boolean",
                        "description": "Whether paper receipts have been received for the expense"
                    }
                },
                "description": "Expense data"
            },
            "UpdateAllocation": {
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    }
                },
                "description": "Allocation data"
            },
            "ApproveReport": {
                "type": "object",
                "properties": {
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "OTHER",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    },
                    "statusId": {
                        "maxLength": 6,
                        "type": "string",
                        "description": "Status that will be assigned to the report by this workflow transition.",
                        "default": "A_APPR"
                    },
                    "comment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This is the approver's remark on the approval action"
                    },
                    "expenseRejectedComment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This comment identifies why some of the expenses are rejected on this report."
                    }
                }
            },
            "UpdateReportAllocation": {
                "required": [
                    "allocation",
                    "expenseIds"
                ],
                "type": "object",
                "properties": {
                    "expenseIds": {
                        "type": "array",
                        "description": "This is an array of unique identifiers of expenses within this report that are being updated",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allocation": {
                        "$ref": "#/components/schemas/UpdateAllocation"
                    }
                },
                "description": "Allocation data"
            },
            "SendBackReportAsSystem": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "OTHER",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    },
                    "comment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This is the approver's remark on the sendback action"
                    },
                    "expectedWorkflowStepInstanceId": {
                        "type": "string",
                        "description": "The ID of the workflow step in which this report is expected to be in.This parameter can be used to verify that the report is still in the expected workflow step."
                    }
                }
            },
            "ApproveReportAsSystem": {
                "type": "object",
                "properties": {
                    "reportSource": {
                        "type": "string",
                        "description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
                        "default": "OTHER",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TR",
                            "UI"
                        ]
                    },
                    "statusId": {
                        "maxLength": 6,
                        "type": "string",
                        "description": "Status that will be assigned to the report by this workflow transition.",
                        "default": "A_APPR"
                    },
                    "comment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This is the approver's remark on the approval action"
                    },
                    "expenseRejectedComment": {
                        "maxLength": 2000,
                        "type": "string",
                        "description": "This comment identifies why some of the expenses are rejected on this report."
                    },
                    "expectedWorkflowStepInstanceId": {
                        "type": "string",
                        "description": "The ID of the workflow step in which this report is expected to be in.This parameter can be used to verify that the report is still in the expected workflow step."
                    }
                }
            },
            "Employee": {
                "required": [
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of the employee"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the employee"
                    },
                    "middleInitial": {
                        "type": "string",
                        "description": "Middle initial of the employee"
                    },
                    "employeeId": {
                        "type": "string",
                        "description": "Unique identifier of the employee that can be referenced in external systems"
                    },
                    "employeeUuid": {
                        "type": "string",
                        "description": "UUID of the employee",
                        "format": "uuid"
                    }
                },
                "description": "Names and Identifier of the report owner"
            },
            "CostObjectExpense": {
                "required": [
                    "approvedAmount",
                    "id",
                    "postedAmount"
                ],
                "type": "object",
                "properties": {
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "postedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the expense"
                    }
                },
                "description": "A list of expenses associated with the cost object"
            },
            "CostObjectForApprover": {
                "required": [
                    "approvedAmount",
                    "approverId",
                    "claimedAmount",
                    "expenses",
                    "isApprovableAsDelegate",
                    "isApprovableAsUser",
                    "isFullyApproved",
                    "isOwnedByCaller",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the cost object"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approverId": {
                        "type": "string",
                        "description": "The details of the approver who is pending to approve the cost object"
                    },
                    "expenses": {
                        "type": "array",
                        "description": "A list of expenses associated with the cost object",
                        "items": {
                            "$ref": "#/components/schemas/CostObjectExpense"
                        }
                    },
                    "isOwnedByCaller": {
                        "type": "boolean",
                        "description": "Whether the caller is one of the cost object owners"
                    },
                    "isFullyApproved": {
                        "type": "boolean",
                        "description": "Whether the cost object flow is completed"
                    },
                    "isApprovableAsUser": {
                        "type": "boolean",
                        "description": "Whether the cost object is pending approval by the calling approver"
                    },
                    "isApprovableAsDelegate": {
                        "type": "boolean",
                        "description": "Whether the cost object flow is pending approval by the calling delegate"
                    }
                }
            },
            "Link": {
                "required": [
                    "href",
                    "isTemplated",
                    "method",
                    "rel"
                ],
                "type": "object",
                "properties": {
                    "rel": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string",
                        "description": "The URL of the related HATEOAS link that you can use for subsequent calls"
                    },
                    "hreflang": {
                        "type": "string"
                    },
                    "media": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deprecation": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string",
                        "description": "The HTTP method required for the related call"
                    },
                    "isTemplated": {
                        "type": "boolean",
                        "description": "Whether the href is parameterized"
                    }
                }
            },
            "ReportToApprove": {
                "required": [
                    "amountDueEmployee",
                    "approver",
                    "claimedAmount",
                    "employee",
                    "hasExceptions",
                    "link",
                    "name",
                    "reportDate",
                    "reportId",
                    "reportNumber",
                    "reportType",
                    "submitDate",
                    "totalApprovedAmount"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The expense report name input by the user"
                    },
                    "reportDate": {
                        "type": "string",
                        "description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "reportId": {
                        "type": "string",
                        "description": "The unique identifier for the report resource"
                    },
                    "reportNumber": {
                        "type": "string",
                        "description": "The 6 character unique identifier for the report resource"
                    },
                    "submitDate": {
                        "type": "string",
                        "description": "The date (ISO-8601) the report was submitted by the user (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "approver": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "amountDueEmployee": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "totalApprovedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "hasExceptions": {
                        "type": "boolean",
                        "description": "Whether the Report has any exceptions"
                    },
                    "reportType": {
                        "type": "string",
                        "description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
                        "example": "'Regular' or 'Reconciliation' or 'Statement' or 'AutoCreated'",
                        "enum": [
                            "'Regular' or 'Reconciliation' or 'Statement' or 'AutoCreated'"
                        ]
                    },
                    "link": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "employeeFirstName": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "employeeLastName": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "employeeMiddleInitial": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "crnCode": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "description": "ReportToApprove"
            },
            "ReportForm": {
                "required": [
                    "amountCompanyPaid",
                    "amountDueCompany",
                    "amountDueCompanyCard",
                    "amountDueEmployee",
                    "amountNotApproved",
                    "analyticsGroupId",
                    "approvalStatus",
                    "approvalStatusId",
                    "approvedAmount",
                    "canAddExpense",
                    "canRecall",
                    "claimedAmount",
                    "concurAuditStatus",
                    "creationDate",
                    "currency",
                    "currencyCode",
                    "defaultFieldAccess",
                    "hierarchyNodeId",
                    "imageStatus",
                    "isFinancialIntegrationEnabled",
                    "isPaperReceiptRequired",
                    "isPaperReceiptsReceived",
                    "isPendingDelegatorReview",
                    "isReceiptImageAvailable",
                    "isReceiptImageRequired",
                    "isSentBack",
                    "isSubmitted",
                    "ledger",
                    "ledgerId",
                    "name",
                    "paymentConfirmedAmount",
                    "paymentStatus",
                    "paymentStatusId",
                    "personalAmount",
                    "policy",
                    "policyId",
                    "receiptStatus",
                    "reportFormId",
                    "reportId",
                    "reportTotal",
                    "reportVersion",
                    "userId"
                ],
                "type": "object",
                "properties": {
                    "approvalStatus": {
                        "type": "string",
                        "description": "The report\u2019s approval status, in the user\u2019s language"
                    },
                    "approvalStatusId": {
                        "type": "string",
                        "description": "The unique identifier of the Approval Status"
                    },
                    "concurAuditStatus": {
                        "type": "string",
                        "description": "The status of audit for the report",
                        "enum": [
                            "PASS",
                            "FAIL",
                            "NOTR"
                        ]
                    },
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the report based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "ledger": {
                        "type": "string",
                        "description": "The ledger name to which the report belongs (localized as per accept-language header)"
                    },
                    "ledgerId": {
                        "type": "string",
                        "description": "The unique identifier of the Ledger"
                    },
                    "paymentStatus": {
                        "type": "string",
                        "description": "The report's payment status in the user's language"
                    },
                    "paymentStatusId": {
                        "type": "string",
                        "description": "The unique identifier of the payment status of the report"
                    },
                    "submitDate": {
                        "type": "string",
                        "description": "The UTC datetime when the user submitted the report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ",
                        "format": "date-time"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "amountCompanyPaid": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "paymentConfirmedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "amountDueCompany": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "amountDueCompanyCard": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "amountDueEmployee": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "personalAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "reportTotal": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "amountNotApproved": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "isFinancialIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Whether the Financial Integration setting has been enabled for this report"
                    },
                    "canReopen": {
                        "type": "boolean",
                        "description": "Whether the report can be reopened after payment"
                    },
                    "isReopened": {
                        "type": "boolean",
                        "description": "Whether the report is reopened"
                    },
                    "isFundsAndGrantsIntegrationEligible": {
                        "type": "boolean",
                        "description": "Whether a report is eligible to be FGI obligated"
                    },
                    "isReceiptImageAvailable": {
                        "type": "boolean",
                        "description": "Whether the receipt image is available at the report level"
                    },
                    "isReceiptImageRequired": {
                        "type": "boolean",
                        "description": "Whether the receipt image is required at the report level"
                    },
                    "isPaperReceiptsReceived": {
                        "type": "boolean",
                        "description": "Whether paper receipts have been received for the report"
                    },
                    "reportId": {
                        "type": "string",
                        "description": "The unique identifier for the report resource"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency name for the report (localized as per accept-language header)"
                    },
                    "currencyCode": {
                        "type": "string",
                        "description": "The 3-letter ISO 4217 currency code (https://en.wikipedia.org/wiki/ISO_4217) for the expense report currency. Examples: USD - US dollars; BRL - Brazilian real; CAD - Canadian dollar; CHF - Swiss franc; EUR - Euro; GBO - Pound sterling; HKD - Hong Kong"
                    },
                    "analyticsGroupId": {
                        "type": "string",
                        "description": "The unique identifier of the business intelligence hierarchy node"
                    },
                    "hierarchyNodeId": {
                        "type": "string",
                        "description": "The unique identifier of the group hierarchy node for the report resource"
                    },
                    "allocationFormId": {
                        "type": "string",
                        "description": "The unique identifier of the allocation form"
                    },
                    "links": {
                        "type": "array",
                        "description": "Resource links related to this call",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "reportDate": {
                        "type": "string",
                        "description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "reportFormId": {
                        "type": "string",
                        "description": "The unique identifier of the report form"
                    },
                    "businessPurpose": {
                        "type": "string",
                        "description": "The text input for the business purpose by the user"
                    },
                    "countryCode": {
                        "maxLength": 2,
                        "type": "string",
                        "description": "The report country. Format: The ISO 3166-1 alpha-2 country code.",
                        "example": "United States is US"
                    },
                    "countrySubDivisionCode": {
                        "type": "string",
                        "description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The unique identifier of the policy that applies to this report"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "name": {
                        "type": "string",
                        "description": "The expense report name input by the user"
                    },
                    "policy": {
                        "type": "string",
                        "description": "The policy name to which the report adheres (localized as per accept-language header)"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country name associated with the report (localized as per accept-language header)"
                    },
                    "hasReceivedCashAdvanceReturns": {
                        "type": "boolean",
                        "description": "Whether the Processor has received funds from the user for a cash advance return"
                    },
                    "receiptContainerId": {
                        "type": "string",
                        "description": "The unique identifier of the physical location where the paper receipts are stored"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier of the Concur user who is the report owner"
                    },
                    "reportType": {
                        "type": "string",
                        "description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
                        "example": "'Regular' or 'Reconciliation' or 'Statement' or 'AutoCreated'",
                        "enum": [
                            "Regular",
                            "Reconciliation",
                            "Statement",
                            "AutoCreated",
                            "'Regular' or 'Reconciliation' or 'Statement' or 'AutoCreated'"
                        ]
                    },
                    "redirectFund": {
                        "$ref": "#/components/schemas/RedirectFund"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "The UTC datetime when the user created the report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ",
                        "format": "date-time"
                    },
                    "canRecall": {
                        "type": "boolean",
                        "description": "Whether the report can be recalled by the current user"
                    },
                    "reportVersion": {
                        "type": "integer",
                        "description": "The current version of the report",
                        "format": "int32"
                    },
                    "reportNumber": {
                        "type": "string",
                        "description": "User friendly unique identifier for the report"
                    },
                    "cardProgramStatementPeriodId": {
                        "type": "string",
                        "description": "The unique identifier of card program statement period on the report"
                    },
                    "canAddExpense": {
                        "type": "boolean",
                        "description": "Indicates whether an expense entry can be added to the report"
                    },
                    "isSubmitted": {
                        "type": "boolean",
                        "description": "Indicates whether the report has been submitted"
                    },
                    "isSentBack": {
                        "type": "boolean",
                        "description": "Indicates whether the report has been sent back"
                    },
                    "sponsorId": {
                        "type": "string",
                        "description": "The unique identifier of the Employee, who is the official sponsor of the report owner"
                    },
                    "submitterId": {
                        "type": "string",
                        "description": "The unique identifier of the employee, who submitted the report"
                    },
                    "taxConfigId": {
                        "type": "string",
                        "description": "The tax config ID of the report"
                    },
                    "defaultFieldAccess": {
                        "type": "string",
                        "description": "The default access level of this reports form fields. RO = read-only, RW = read-write",
                        "enum": [
                            "HD",
                            "RO",
                            "RW"
                        ]
                    },
                    "employee": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "receiptStatus": {
                        "type": "string",
                        "description": "The paper receipts status for the report.",
                        "enum": [
                            "NOT_RECEIVED",
                            "NOT_REQUIRED",
                            "RECEIVED",
                            "RECEIVED_NOT_REQUIRED",
                            "NOT_RECEIVED",
                            "NOT_REQUIRED",
                            "RECEIVED",
                            "RECEIVED_NOT_REQUIRED"
                        ]
                    },
                    "imageStatus": {
                        "type": "string",
                        "description": "The linked image status for the report.",
                        "enum": [
                            "NOT_RECEIVED",
                            "NOT_REQUIRED",
                            "RECEIVED",
                            "RECEIVED_NOT_REQUIRED",
                            "NOT_RECEIVED",
                            "NOT_REQUIRED",
                            "RECEIVED",
                            "RECEIVED_NOT_REQUIRED"
                        ]
                    },
                    "isPendingDelegatorReview": {
                        "type": "boolean",
                        "description": "Whether a report created by a delegate is pending review by the employee"
                    },
                    "isPaperReceiptRequired": {
                        "type": "boolean",
                        "description": "Whether a paper receipt is required for the report."
                    }
                },
                "description": "ReportDetails"
            },
            "ExpenseSourceIdentifiers": {
                "type": "object",
                "properties": {
                    "creditCardTransactionId": {
                        "type": "string",
                        "description": "The unique identifier of the credit card transaction (indexed transactionId) associated with the expense"
                    },
                    "receiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image associated with the expense"
                    },
                    "expenseCaptureImageId": {
                        "type": "string",
                        "description": "The unique identifier of the expense capture image associated with the expense"
                    },
                    "lastAppendedReceiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image being appended to existing receipt"
                    },
                    "quickExpenseId": {
                        "type": "string",
                        "description": "The unique identifier of the mobile expense associated with the expense"
                    },
                    "personalCardTransactionId": {
                        "type": "string",
                        "description": "The unique identifier of the personal card transaction associated with the expense"
                    },
                    "segmentId": {
                        "type": "integer",
                        "description": "The unique identifier of the segment associated with the expense",
                        "format": "int64"
                    },
                    "tripId": {
                        "type": "integer",
                        "description": "The unique identifier of the trip id associated with the expense",
                        "format": "int64"
                    },
                    "segmentTypeId": {
                        "type": "string",
                        "description": "Segment type id associated with the trip.",
                        "enum": [
                            "AIRFR - Air Ticket",
                            "AIRSU - Air Subscription",
                            "CARRT - Car Rental",
                            "DININ - Dining",
                            "EVENT - Event",
                            "HOTEL - Hotel Reservation",
                            "INSUR - Insurance",
                            "LIMOF - Limousine Reservation",
                            "MISC - Miscellaneous",
                            "PARKG - Parking Fee",
                            "RAILF - Train Ticket",
                            "RAISU - Train Subscription",
                            "TAXIF - Taxi Fare",
                            "VISA - Visa"
                        ]
                    },
                    "jptRouteId": {
                        "type": "string",
                        "description": "The unique identifier to identify a Japan rail route"
                    },
                    "ereceiptId": {
                        "type": "string"
                    },
                    "ereceiptURL": {
                        "type": "string"
                    }
                },
                "description": "The list of expense sources associated with the expense"
            },
            "ReportEntrySummary": {
                "required": [
                    "allocationState",
                    "canDelete",
                    "exchangeRate",
                    "expenseId",
                    "expenseType",
                    "hasBlockingExceptions",
                    "hasExceptions",
                    "hasMissingReceiptDeclaration",
                    "isAutoCreated",
                    "isImageRequired",
                    "isPaperReceiptRequired",
                    "isPersonalExpense",
                    "paymentType",
                    "postedAmount",
                    "transactionAmount"
                ],
                "type": "object",
                "properties": {
                    "allocationSetId": {
                        "type": "string",
                        "description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time"
                    },
                    "allocationState": {
                        "type": "string",
                        "description": "Allocation state for the expense.",
                        "enum": [
                            "FULLY_ALLOCATED",
                            "NOT_ALLOCATED",
                            "PARTIALLY_ALLOCATED"
                        ]
                    },
                    "approverAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "attendeeCount": {
                        "type": "integer",
                        "description": "The total number of attendees associated with the expense",
                        "format": "int32"
                    },
                    "businessPurpose": {
                        "type": "string",
                        "description": "The text input for the business purpose by the user"
                    },
                    "canDelete": {
                        "type": "boolean",
                        "description": "Indicates whether or not the expense entry can be deleted"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "ereceiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the eReceipt image associated with the expense"
                    },
                    "exchangeRate": {
                        "$ref": "#/components/schemas/ExchangeRate"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier for the expense"
                    },
                    "parentExpenseId": {
                        "type": "string",
                        "description": "Expense Id of the parent expense"
                    },
                    "expenseSourceIdentifiers": {
                        "$ref": "#/components/schemas/ExpenseSourceIdentifiers"
                    },
                    "expenseType": {
                        "$ref": "#/components/schemas/ExpenseType"
                    },
                    "hasBlockingExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions that blocks it from being submitted"
                    },
                    "hasExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions"
                    },
                    "hasMissingReceiptDeclaration": {
                        "type": "boolean",
                        "description": "Whether the expense has an affidavit declaration for missing receipt"
                    },
                    "isAutoCreated": {
                        "type": "boolean",
                        "description": "Whether the expense is auto created"
                    },
                    "imageCertificationStatus": {
                        "type": "string",
                        "description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
                    },
                    "isImageRequired": {
                        "type": "boolean",
                        "description": "Whether the image is required for the expense"
                    },
                    "isPaperReceiptRequired": {
                        "type": "boolean",
                        "description": "Whether the paper receipt is required for the expense to be submitted"
                    },
                    "isPersonalExpense": {
                        "type": "boolean",
                        "description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
                    },
                    "jptRouteId": {
                        "type": "string",
                        "description": "The unique route ID to identify a Japan rail route"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "links": {
                        "type": "array",
                        "description": "Resource links related to this call.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "paymentType": {
                        "$ref": "#/components/schemas/PaymentType"
                    },
                    "postedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "receiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image associated with the expense"
                    },
                    "ticketNumber": {
                        "type": "string",
                        "description": "The ticket number associated with the travel"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "travelAllowance": {
                        "$ref": "#/components/schemas/TravelAllowance"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/Vendor"
                    },
                    "fuelTypeListItem": {
                        "$ref": "#/components/schemas/CustomData"
                    },
                    "allocationVersion": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    }
                },
                "description": "ReportExpenseSummary"
            },
            "ExpenseTaxSummary": {
                "type": "object",
                "properties": {
                    "totalTaxPostedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "totalTaxAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "totalReclaimPostedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "totalReclaimAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "netTaxAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "netAdjustedTaxAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "netReclaimAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "netReclaimAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "vatTaxTotal": {
                        "$ref": "#/components/schemas/Amount"
                    }
                },
                "description": "Tax information for the expense. Please refer to the 'ExpenseTaxSummary' object for more information"
            },
            "ReportEntryDetail": {
                "required": [
                    "allocationState",
                    "canAllocate",
                    "canDelete",
                    "exchangeRate",
                    "expenseId",
                    "expenseType",
                    "hasBlockingExceptions",
                    "hasExceptions",
                    "hasMissingReceiptDeclaration",
                    "isAutoCreated",
                    "isExcludedFromCashAdvanceByUser",
                    "isExpenseBillable",
                    "isExpenseRejected",
                    "isImageRequired",
                    "isPaperReceiptReceived",
                    "isPaperReceiptRequired",
                    "isPersonalExpense",
                    "paymentType",
                    "postedAmount",
                    "taxRateLocation",
                    "transactionAmount"
                ],
                "type": "object",
                "properties": {
                    "allocationSetId": {
                        "type": "string",
                        "description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time"
                    },
                    "allocationState": {
                        "type": "string",
                        "description": "Allocation state for the expense.",
                        "enum": [
                            "FULLY_ALLOCATED",
                            "NOT_ALLOCATED",
                            "PARTIALLY_ALLOCATED"
                        ]
                    },
                    "approverAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "attendeeCount": {
                        "type": "integer",
                        "description": "The total number of attendees associated with the expense",
                        "format": "int32"
                    },
                    "businessPurpose": {
                        "type": "string",
                        "description": "The text input for the business purpose by the user"
                    },
                    "canDelete": {
                        "type": "boolean",
                        "description": "Indicates whether or not the expense entry can be deleted"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "ereceiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the eReceipt image associated with the expense"
                    },
                    "exchangeRate": {
                        "$ref": "#/components/schemas/ExchangeRate"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier for the expense"
                    },
                    "parentExpenseId": {
                        "type": "string",
                        "description": "Expense Id of the parent expense"
                    },
                    "expenseSourceIdentifiers": {
                        "$ref": "#/components/schemas/ExpenseSourceIdentifiers"
                    },
                    "expenseType": {
                        "$ref": "#/components/schemas/ExpenseType"
                    },
                    "hasBlockingExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions that blocks it from being submitted"
                    },
                    "hasExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions"
                    },
                    "hasMissingReceiptDeclaration": {
                        "type": "boolean",
                        "description": "Whether the expense has an affidavit declaration for missing receipt"
                    },
                    "isAutoCreated": {
                        "type": "boolean",
                        "description": "Whether the expense is auto created"
                    },
                    "imageCertificationStatus": {
                        "type": "string",
                        "description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
                    },
                    "isImageRequired": {
                        "type": "boolean",
                        "description": "Whether the image is required for the expense"
                    },
                    "isPaperReceiptRequired": {
                        "type": "boolean",
                        "description": "Whether the paper receipt is required for the expense to be submitted"
                    },
                    "isPersonalExpense": {
                        "type": "boolean",
                        "description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
                    },
                    "jptRouteId": {
                        "type": "string",
                        "description": "The unique route ID to identify a Japan rail route"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "links": {
                        "type": "array",
                        "description": "Resource links related to this call.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "paymentType": {
                        "$ref": "#/components/schemas/PaymentType"
                    },
                    "postedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "receiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image associated with the expense"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "travelAllowance": {
                        "$ref": "#/components/schemas/TravelAllowance"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/Vendor"
                    },
                    "fuelTypeListItem": {
                        "$ref": "#/components/schemas/CustomData"
                    },
                    "authorizationRequestExpenseId": {
                        "type": "string",
                        "description": "The authorization request expense id associated with the expense"
                    },
                    "budgetAccrualDate": {
                        "type": "string",
                        "description": "The budget accrual date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "canAllocate": {
                        "type": "boolean",
                        "description": "Whether the expense can be allocated"
                    },
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the expense based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "expenseTaxSummary": {
                        "$ref": "#/components/schemas/ExpenseTaxSummary"
                    },
                    "isExcludedFromCashAdvanceByUser": {
                        "type": "boolean",
                        "description": "Whether the user has excluded the expense from cash advance"
                    },
                    "isExpenseBillable": {
                        "type": "boolean",
                        "description": "Whether the expense is billable"
                    },
                    "isExpenseRejected": {
                        "type": "boolean",
                        "description": "Whether the approver or processor has rejected this expense in the report. If this is true then this expense will be sent back to the report submitted in an addendum (split) report"
                    },
                    "isPaperReceiptReceived": {
                        "type": "boolean",
                        "description": "Whether the paper receipt was received for the expense"
                    },
                    "merchantTaxId": {
                        "type": "string",
                        "description": "Merchant tax id for the expense"
                    },
                    "mileage": {
                        "$ref": "#/components/schemas/Mileage"
                    },
                    "receiptType": {
                        "$ref": "#/components/schemas/ReceiptType"
                    },
                    "taxRateLocation": {
                        "type": "string",
                        "description": "Transaction location relative to the employee's home location as defined by their user profile.",
                        "default": "HOME",
                        "enum": [
                            "FOREIGN",
                            "HOME",
                            "OUT_OF_PROVINCE",
                            "FOREIGN - The expense transaction took place in foreign currency",
                            "HOME - The expense transaction took place in the reimbursement currency",
                            "OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction"
                        ]
                    },
                    "travel": {
                        "$ref": "#/components/schemas/Travel"
                    },
                    "xmlReceiptId": {
                        "type": "string",
                        "description": "The unique identifier of the XML receipt associated with the expense"
                    },
                    "allocationVersion": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    }
                },
                "description": "ReportExpenseDetail"
            },
            "ReportEntryItemizationSummary": {
                "required": [
                    "allocationState",
                    "canDelete",
                    "exchangeRate",
                    "expenseId",
                    "expenseType",
                    "hasBlockingExceptions",
                    "hasExceptions",
                    "hasMissingReceiptDeclaration",
                    "isAutoCreated",
                    "isImageRequired",
                    "isPaperReceiptRequired",
                    "isPersonalExpense",
                    "paymentType",
                    "postedAmount",
                    "transactionAmount"
                ],
                "type": "object",
                "properties": {
                    "allocationSetId": {
                        "type": "string",
                        "description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time"
                    },
                    "allocationState": {
                        "type": "string",
                        "description": "Allocation state for the expense.",
                        "enum": [
                            "FULLY_ALLOCATED",
                            "NOT_ALLOCATED",
                            "PARTIALLY_ALLOCATED"
                        ]
                    },
                    "approverAdjustedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "attendeeCount": {
                        "type": "integer",
                        "description": "The total number of attendees associated with the expense",
                        "format": "int32"
                    },
                    "businessPurpose": {
                        "type": "string",
                        "description": "The text input for the business purpose by the user"
                    },
                    "canDelete": {
                        "type": "boolean",
                        "description": "Indicates whether or not the expense entry can be deleted"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "ereceiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the eReceipt image associated with the expense"
                    },
                    "exchangeRate": {
                        "$ref": "#/components/schemas/ExchangeRate"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier for the expense"
                    },
                    "parentExpenseId": {
                        "type": "string",
                        "description": "Expense Id of the parent expense"
                    },
                    "expenseSourceIdentifiers": {
                        "$ref": "#/components/schemas/ExpenseSourceIdentifiers"
                    },
                    "expenseType": {
                        "$ref": "#/components/schemas/ExpenseType"
                    },
                    "hasBlockingExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions that blocks it from being submitted"
                    },
                    "hasExceptions": {
                        "type": "boolean",
                        "description": "Whether the expense has any exceptions"
                    },
                    "hasMissingReceiptDeclaration": {
                        "type": "boolean",
                        "description": "Whether the expense has an affidavit declaration for missing receipt"
                    },
                    "isAutoCreated": {
                        "type": "boolean",
                        "description": "Whether the expense is auto created"
                    },
                    "imageCertificationStatus": {
                        "type": "string",
                        "description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
                    },
                    "isImageRequired": {
                        "type": "boolean",
                        "description": "Whether the image is required for the expense"
                    },
                    "isPaperReceiptRequired": {
                        "type": "boolean",
                        "description": "Whether the paper receipt is required for the expense to be submitted"
                    },
                    "isPersonalExpense": {
                        "type": "boolean",
                        "description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
                    },
                    "jptRouteId": {
                        "type": "string",
                        "description": "The unique route ID to identify a Japan rail route"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "links": {
                        "type": "array",
                        "description": "Resource links related to this call.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    },
                    "paymentType": {
                        "$ref": "#/components/schemas/PaymentType"
                    },
                    "postedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "receiptImageId": {
                        "type": "string",
                        "description": "The unique identifier of the image associated with the expense"
                    },
                    "ticketNumber": {
                        "type": "string",
                        "description": "The ticket number associated with the travel"
                    },
                    "transactionAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD",
                        "format": "date"
                    },
                    "travelAllowance": {
                        "$ref": "#/components/schemas/TravelAllowance"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/Vendor"
                    },
                    "fuelTypeListItem": {
                        "$ref": "#/components/schemas/CustomData"
                    },
                    "allocationVersion": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    }
                },
                "description": "ReportExpenseItemizationSummary"
            },
            "CommentDetails": {
                "required": [
                    "author",
                    "comment",
                    "createdForEmployee",
                    "creationDate",
                    "isAuditorComment",
                    "isLatest"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string",
                        "description": "The comments input on the report/expense by all users"
                    },
                    "author": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "createdForEmployee": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "createdForEmployeeId": {
                        "type": "string",
                        "description": "The unique identifier of the Employee the comment was created on behalf of. This would differ from the comment author only in the case of delegates creating the comment"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "The UTC datetime when the comment was created on the report/expense (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ.SSS'Z'",
                        "format": "date-time"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier of the expense"
                    },
                    "isAuditorComment": {
                        "type": "boolean",
                        "description": "Whether this comment has been authored by an auditor"
                    },
                    "isLatest": {
                        "type": "boolean",
                        "description": "This attribute represents whether a specific comment is the latest comment by the user"
                    },
                    "stepInstanceId": {
                        "type": "string",
                        "description": "The unique identifier of the step instance"
                    }
                },
                "description": "CommentDetails"
            },
            "Allocation": {
                "required": [
                    "allocationId",
                    "expenseId",
                    "isSystemAllocation",
                    "percentage"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "allocationId": {
                        "type": "string",
                        "description": " The unique identifier of the allocation"
                    },
                    "accountCode": {
                        "type": "string",
                        "description": "The ledger account code associated with the allocation"
                    },
                    "overLimitAccountCode": {
                        "type": "string",
                        "description": " The ledger account code associated with the allocation if it exceeds a pre-defined threshold, for example, the user\u2019s travel allowance limit "
                    },
                    "allocationAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier of the expense associated with the allocation"
                    },
                    "isSystemAllocation": {
                        "type": "boolean",
                        "description": "Whether the allocation is a system allocation, usually hidden from the user. If displayed to the user, should be read-only"
                    },
                    "isPercentEdited": {
                        "type": "boolean",
                        "description": "Whether the allocation percent has been edited"
                    },
                    "percentage": {
                        "type": "number",
                        "description": "The percentage of the total expense that this allocation represents"
                    }
                },
                "description": "Allocation Details"
            },
            "ReportAllocationResponse": {
                "required": [
                    "allocationId",
                    "expenseId",
                    "isPercentEdited",
                    "isSystemAllocation",
                    "percentage"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "allocationId": {
                        "type": "string",
                        "description": " The unique identifier of the allocation"
                    },
                    "accountCode": {
                        "type": "string",
                        "description": "The ledger account code associated with the allocation"
                    },
                    "overLimitAccountCode": {
                        "type": "string",
                        "description": " The ledger account code associated with the allocation if it exceeds a pre-defined threshold, for example, the user\u2019s travel allowance limit "
                    },
                    "allocationAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "approvedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "claimedAmount": {
                        "$ref": "#/components/schemas/Amount"
                    },
                    "expenseId": {
                        "type": "string",
                        "description": "The unique identifier of the expense associated with the allocation"
                    },
                    "isSystemAllocation": {
                        "type": "boolean",
                        "description": "Whether the allocation is a system allocation, usually hidden from the user. If displayed to the user, should be read-only"
                    },
                    "isPercentEdited": {
                        "type": "boolean",
                        "description": "Whether the allocation percent has been edited"
                    },
                    "percentage": {
                        "type": "number",
                        "description": "The percentage of the total expense that this allocation represents"
                    }
                }
            },
            "UpdateReportExpenseCompact": {
                "required": [
                    "expenseSource"
                ],
                "type": "object",
                "properties": {
                    "customData": {
                        "type": "array",
                        "description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
                        "items": {
                            "$ref": "#/components/schemas/CustomData"
                        }
                    },
                    "businessPurpose": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The text input for the business purpose by the user."
                    },
                    "expenseSource": {
                        "type": "string",
                        "description": "The source of the expense. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TA - Travel Allowance, TR - Travel Request, UI - Web UI",
                        "enum": [
                            "EA",
                            "MOB",
                            "OTHER",
                            "SE",
                            "TA",
                            "TR",
                            "UI"
                        ]
                    },
                    "isExpenseRejected": {
                        "type": "boolean",
                        "description": "Whether the approver or processor has rejected this expense in the report. If this is true then this expense will be sent back to the report submitted in an addendum (split) report"
                    }
                },
                "description": "Expense data"
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        }
    },
    "x-sap-shortText": "Next generation APIs for operations related to creating and processing Expense Reports"
}
